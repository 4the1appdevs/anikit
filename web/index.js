// Generated by LiveScript 1.3.1
var tomatoJs, tomatoCss, tomatoWebgl, style, animate, shader, renderer;
tomatoJs = document.querySelector('.tomato.js');
tomatoCss = document.querySelector('.tomato.css');
tomatoWebgl = document.querySelector('.tomato.webgl');
/* CSS */
style = document.createElement("style");
document.head.appendChild(style);
style.setAttribute('type', 'text/css');
style.textContent = "" + bounce.css() + "\n.tomato.css {\n  animation: bounce 1s infinite\n}";
/* JS */
animate = function(func){
  var step;
  return requestAnimationFrame(step = function(t){
    func(t * 0.001);
    return requestAnimationFrame(step);
  });
};
animate(function(t){
  var mat;
  mat = bounce.js(t, {
    height: -20
  });
  return tomatoJs.style.transform = "matrix(" + mat.join(',') + ")";
});
/* WEBGL */
shader = {
  render: function(renderer, program, t){
    var gl;
    gl = renderer.gl;
    gl.clearColor(0, 0, 0, 0);
    gl.clear(gl.COLOR_BUFFER_BIT);
    return gl.drawArrays(gl.TRIANGLES, 0, 6);
  },
  vertexShader: 'precision highp float;' + bounce.glsl() + 'attribute vec3 position;\nuniform float uTime;\nuniform vec2 uResolution;\nvoid main() {\n  float t = uTime;\n  vec3 pos = vec3(vec2(position), 1.);\n  gl_Position = vec4(pos, 1.);\n}',
  fragmentShader: 'precision highp float;' + bounce.glsl() + 'uniform float uTime;\nuniform vec2 uResolution;\nvoid main() {\n  float len, alpha, p, t = uTime;\n  vec3 pos, c1, c2;\n  vec2 uv;\n  c1 = vec3(.5625, .5625, 1.);\n  c2 = vec3(.8125, .5625, 1.);\n  uv = gl_FragCoord.xy / uResolution.xy;\n  pos = vec3(uv - vec2(.5, .5), 1.);\n\n  float height = -20.;\n  height = height / uResolution.y;\n\n  pos = bounce(t, height) * pos;\n\n  pos.xy = (pos.xy * uResolution.xy / 40.0);\n  len = length(pos.xy);\n  alpha = smoothstep(1.02,.98,len);\n  p = smoothstep(0.81, 0.79, len);\n  if(pos.y < 0.0) { p = 1.; }\n  if(pos.x < 0.0) { p = 1.; }\n  gl_FragColor = vec4(c2 * p + c1 * (1. - p), alpha);\n}'
};
renderer = new ShaderRenderer([shader], {
  root: tomatoWebgl
});
renderer.init();
renderer.animate();