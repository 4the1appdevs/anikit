// Generated by LiveScript 1.3.1
var easingFit, cubic, kitsList, easing, anikit;
easingFit = require('easing-fit');
cubic = require('cubic');
kitsList = require('./kits-list');
easing = require('./easing');
anikit = {
  noise: function(t){
    return (Math.sin(t * 43758.5453) + 1) * 0.5;
  },
  stepToKeyframes: function(step, opt){
    var ret, propFunc;
    ret = easingFit.fit(step, opt);
    propFunc = opt.propFunc || function(it){
      return it;
    };
    ret = easingFit.toKeyframes(ret, {
      name: opt.name,
      propFunc: function(it){
        return propFunc(it, opt);
      },
      format: 'css'
    });
    return ret;
  },
  use: function(name){
    var mod, config, k, ref$, v;
    mod = this.types[name]
      ? this.mods[this.types[name]]
      : this.mods[name];
    config = {
      name: name
    };
    for (k in ref$ = mod.edit) {
      v = ref$[k];
      config[k] = v['default'];
    }
    import$(config, mod.preset[name]);
    return {
      mod: mod,
      config: config
    };
  }
};
import$(anikit, kitsList);
anikit.timing = easing;
anikit.cubic = cubic;
if (typeof window != 'undefined' && window !== null) {
  window.anikit = anikit;
  window.easingFit = easingFit;
}
if (typeof module != 'undefined' && module !== null) {
  module.exports = anikit;
}
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}