// Generated by LiveScript 1.3.1
module.exports = {
  opt: {
    args: [-40, 50, 13 / 18, 0.6]
  },
  step: function(t, opt){
    var args, y, s;
    opt == null && (opt = {});
    args = opt.args || [];
    if (t < args[2]) {
      t = t / args[2];
      y = args[0] * (0.25 - Math.pow(t - 0.5, 2)) * 4;
      s = 1;
    } else {
      t = (t - args[2]) / (1 - args[2]);
      s = args[3] + (1 - args[3]) * Math.pow(t - 0.5, 2) / 0.25;
      y = args[1] * (1 - s);
    }
    return [1, 0, 0, s, 0, y];
  },
  css: function(opt){
    var optAlt, args, ret1, ret2, ret, this$ = this;
    optAlt = import$(import$({}, this.opt), JSON.parse(JSON.stringify(opt)));
    optAlt.args[0] = 1;
    args = opt.args;
    ret1 = easingFit.fit(function(it){
      return this$.step(it, optAlt)[5];
    }, {
      end: args[2]
    });
    ret2 = easingFit.fit(function(it){
      return this$.step(it, optAlt)[3];
    }, {
      start: args[2]
    });
    ret1.pop();
    ret = ret1.concat(ret2);
    ret = easingFit.toKeyframes(ret, {
      format: 'css',
      propFunc: function(it, idx){
        var s, y;
        if (idx < ret1.length) {
          return ["transform: translate(0," + it.value * args[0] + "px) scaleY(1)"];
        } else {
          s = it.value;
          y = (args[1] || 50) * (1 - s);
          return ["transform: translate(0," + y + "px) scaleY(" + it.value + ")"];
        }
      },
      name: opt.name || 'bounce'
    });
    return ret;
  },
  js: function(t, opt){
    var mat;
    opt == null && (opt = {});
    opt = import$(import$({}, this.opt), opt);
    mat = this.step(t, opt);
    return mat;
  },
  glsl: function(opt){
    opt == null && (opt = {});
    return "mat3 " + (opt.name || 'bounce') + "(float t, int type, mat4 opt) {\n  float y, s = 1.;\n  if(t < opt[0].z) {\n    t = t / opt[0].z;\n    y = opt[0].x * (0.25 - pow(t - 0.5, 2.)) * 4.;\n  } else {\n    t = (t - opt[0].z) / (1. - opt[0].z);\n    s = opt[0].w + ((1. - opt[0].w) * pow(t - 0.5, 2.) / 0.25);\n    y = opt[0].y * (1. - s) / s;\n\n  }\n  mat3 mat = mat3(\n    1., 0., 0,\n    0., 1./s, 0,\n    0 , y , 1.\n  );\n  return mat;\n}";
  }
};
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}