// Generated by LiveScript 1.3.1
var ret;
ret = {
  name: 'hit',
  preset: {
    hit: {}
  },
  edit: {
    dur: {
      'default': 2.0
    },
    steep: {
      'default': 0.5,
      type: 'number',
      min: 0,
      max: 1
    },
    zoom: {
      'default': 1,
      type: 'number',
      min: 0,
      max: 10
    },
    skew: {
      'default': 20,
      type: 'number',
      unit: 'deg',
      min: -90,
      max: 90
    },
    offset: {
      'default': 200,
      type: 'number',
      unit: 'px',
      min: 0,
      max: 10000
    },
    fade: {
      'default': 1,
      type: 'number',
      min: 0,
      max: 1,
      step: 0.01
    },
    unit: {
      'default': 'px',
      type: 'choice',
      values: ["px", "%", ""]
    }
  },
  timing: function(t, opt){},
  css: function(opt){
    return "@keyframes " + opt.name + " {\n  0% {\n    animation-timing-function: cubic-bezier(" + opt.steep + ",0,1," + (1 - opt.steep) + ");\n    transform: scale(0) translate(0,0) skewX(0);\n    opacity: 1;\n  }\n  20% {\n    transform: scale(" + opt.zoom + ") translate(0,0) skewX(" + opt.skew + "deg);\n  }\n  50% {\n    animation-timing-function: cubic-bezier(" + opt.steep * 1.2 + ",0,1," + (1 - opt.steep * 1.2) + ");\n    transform: scale(" + opt.zoom + ") translate(0,0) skewX(" + opt.skew + "deg);\n  }\n  " + (100 - opt.fade * 50) + "% {\n    opacity: 1;\n  }\n  100% {\n    transform: scale(" + opt.zoom + ")  translate(0," + opt.offset + opt.unit + ") skewX(" + opt.skew + "deg);\n    opacity: 0;\n  }\n} ";
  },
  js: function(t, opt){
    var p1, ref$, s, p, k, o;
    p1 = [opt.steep, 0, 1, 1 - opt.steep];
    ref$ = [opt.zoom, 0, opt.skew, 1], s = ref$[0], p = ref$[1], k = ref$[2], o = ref$[3];
    if (t < 0.2) {
      t = anikit.cubic.Bezier.y(anikit.cubic.Bezier.t(t / 0.2, p1), p1);
      s = t * opt.zoom;
      k = t * opt.skew;
    } else if (t >= 0.5) {
      t = anikit.cubic.Bezier.y(anikit.cubic.Bezier.t((t - 0.5) * 2, p1), p1);
      p = opt.offset * t;
      if (t >= 1 - 0.5 * opt.fade) {
        o = (1 - t) / (1 - 0.5 * opt.fade);
      }
    }
    return {
      transform: "scale(" + s + ") translate(0," + p + opt.unit + ") skewX(" + k + "deg)",
      opacity: o
    };
  }
  /* similar keyframes */
  /*
    @keyframes ld-hit
      0%
        timing-speed-up(config.accelerate)
        transform: scale(0) translate(0,0) skewX(0)
      20%
        transform: scale(config.zoom) translate(0,0) skewX(config.skew)
      50%
        //animation-timing-function: cubic-bezier(1,0,1,.5)
        timing-speed-up(config.accelerate * 1.2)
        transform: scale(config.zoom) translate(0,0) skewX(config.skew)
      100%
        transform: scale(config.zoom)  translate(0,config.offset) skewX(config.skew)
    .ld-hit
      animation: ld-hit config.dur infinite
  */
};
module.exports = ret;