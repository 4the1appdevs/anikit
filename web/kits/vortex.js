// Generated by LiveScript 1.3.1
var ret;
ret = {
  name: 'vortex',
  preset: {
    "vortex-out": {
      steep: 0.3,
      rotate: 5,
      zoom: 0.3,
      sampleCount: 20,
      errorThreshold: 0.01,
      segSampleCount: 1000,
      propFunc: function(f, opt){
        var r, s;
        if (f.value < 0.6) {
          r = f.value * opt.rotate * 360 / 0.6;
          s = (1 - opt.zoom) * (f.value / 0.6) + opt.zoom;
        } else {
          r = opt.rotate * 360;
          s = 1;
        }
        return {
          transform: "rotate(" + r + "deg) scale(" + s + ")",
          opacity: f.value < 0.6
            ? f.value / 0.6
            : 1 - (f.value - 0.6) / (1 - 0.6)
        };
      }
    },
    "vortex-in": {
      steep: 0.3,
      rotate: 5,
      zoom: 3,
      sampleCount: 20,
      errorThreshold: 0.01,
      segSampleCount: 1000,
      propFunc: function(f, opt){
        var r, s;
        if (f.value < 0.6) {
          r = f.value * opt.rotate * 360 / 0.6;
          s = (1 - opt.zoom) * (f.value / 0.6) + opt.zoom;
        } else {
          r = opt.rotate * 360;
          s = 1;
        }
        return {
          transform: "rotate(" + r + "deg) scale(" + s + ")",
          opacity: f.value < 0.6
            ? f.value / 0.6
            : 1 - (f.value - 0.6) / (1 - 0.6)
        };
      }
    }
  },
  edit: {
    dur: {
      'default': 2
    },
    steep: {
      'default': 0.3,
      type: 'number',
      min: 0,
      max: 0.3
    },
    rotate: {
      'default': 5,
      type: 'number',
      min: 0,
      max: 20
    },
    zoom: {
      'default': 3,
      type: 'number',
      min: 0,
      max: 10
    }
  },
  timing: function(t, opt){
    var p1;
    p1 = [opt.steep, 0, 1, 1 - opt.steep];
    if (t === 0) {
      return 0;
    }
    if (t < 0.6) {
      t = anikit.cubic.Bezier.y(anikit.cubic.Bezier.t(t / 0.6, p1), p1) * 0.6;
    } else {
      t = anikit.cubic.Bezier.y(anikit.cubic.Bezier.t((t - 0.6) / (1 - 0.6), p1), p1) * 0.4 + 0.6;
    }
    return t;
  },
  css: function(opt){
    var this$ = this;
    return anikit.stepToKeyframes(function(it){
      return this$.timing(it, opt);
    }, opt);
  },
  js: function(t, opt){
    return opt.propFunc({
      value: this.timing(t, opt)
    }, opt);
  }
  /* equivalent keyframes */
  /*
    """
    @keyframes #{opt.name} {
      0% {
        timing-speed-up(config.accelerate)
        transform: rotate(360deg * config.rotate) scale(config.zoom)
        opacity: 0
      60%
        timing-speed-up(config.accelerate)
        transform: rotate(0deg) scale(1)
        opacity: 1
      100%
        opacity: 0
  
    """
  */
};
module.exports = ret;