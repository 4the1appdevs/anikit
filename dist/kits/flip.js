// Generated by LiveScript 1.3.1
(function(){
  var easingFit, cubic, anikit, ret;
  if (typeof require != 'undefined' && require !== null) {
    easingFit = require('easing-fit');
    cubic = require('cubic');
    anikit = require('../anikit');
  }
  ret = {
    name: 'flip',
    type: 'animation',
    preset: {
      "flip": {}
    },
    edit: {
      steep: {
        'default': 0.4,
        type: 'number',
        min: 0,
        max: 1,
        step: 0.01
      }
    },
    css: function(opt){
      var ds, s, c;
      ds = 1 - opt.scale;
      s = opt.steep;
      c = opt.dir === 0 ? 'X' : 'Y';
      return "@keyframes " + opt.name + " {\n  0%, 25%, 50%, 75%, 100% { animation-timing-function: cubic-bezier(0, " + s + "," + (1 - s) + ", 1) }\n    0% { transform: scale(1,1) }\n   25% { transform: scale(-1,1) }\n   50% { transform: scale(-1,-1) }\n   75% { transform: scale(1,-1) }\n  100% { transform: scale(1,1) }\n}";
    },
    js: function(t, opt){
      var v, m;
      v = this.affine(t, opt);
      m = anikit.util.m4to3(v.transform);
      return {
        transform: "matrix(" + m.join(',') + ")"
      };
    },
    affine: function(t, opt){
      var p, phase, ss, ref$, s1, s2, sx, sy;
      p = [0, opt.steep, 1 - opt.steep, 1];
      phase = Math.floor(t * 4);
      t = t * 4 - phase;
      t = cubic.Bezier.y(cubic.Bezier.t(t, p), p);
      ss = [[1, 1], [-1, 1], [-1, -1], [1, -1], [1, 1]];
      ref$ = [ss[phase], ss[phase + 1]], s1 = ref$[0], s2 = ref$[1];
      ref$ = [(s2[0] - s1[0]) * t + s1[0], (s2[1] - s1[1]) * t + s1[1]], sx = ref$[0], sy = ref$[1];
      return {
        transform: [sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
      };
    }
  };
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ret;
  }
  return ret;
})();